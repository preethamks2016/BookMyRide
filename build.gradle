/*
 * Copyright (c) Crio.Do 2018. All rights reserved
 */

//////////////////////////////// DO NOT CHANGE THIS FILE //////////////////////////////////

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    checkstyle {
        toolVersion '7.8.1'
        configFile file("${rootProject.projectDir}/__CRIO__/checkstyle.xml")
    }

    pmd {
        toolVersion = '5.6.1'
    }

    findbugs {
        sourceSets = [sourceSets.main]
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    jacoco {
        toolVersion = "0.7.1.201405082137"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    test {
        jacoco {
            append = true
        }
        reports {
            junitXml.enabled = true
            def destinationDirectory = System.getProperty("user.home") + "/.gradle/daemon/$rootProject.name/test-results"
            junitXml.destination = file(destinationDirectory)
            html.enabled = true
        }
        useJUnitPlatform {
            // TIP:MODULE_SERIALIZATION: Sample code to include/exclude certain tests
            // when you run gradle test.
            // excludeTags 'Level2', 'Level1'
            // includeTags 'CarsInLocationApi'
            // CRIO_INCLUDE_TAGS
            // CRIO_EXCLUDE_TAGS
        }
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTEST RESULT: ${result.resultType}"
                println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                        "${result.successfulTestCount} SUCCEEDED, " +
                        "${result.failedTestCount} FAILED, " +
                        "${result.skippedTestCount} SKIPPED"
            }
        }
        ignoreFailures = true
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.1
                }
            }
        }
    }

    // to run coverage verification during the build (and fail when appropriate)
    check.dependsOn jacocoTestCoverageVerification
}

ext {
    // Dependency versions
    springBootVersion = '2.0.5.RELEASE'
    springCoreVersion = '5.0.9.RELEASE'
    junitVersion = '5.3.1'
    junitPlatformLauncherVersion = '1.3.1'
    mockitoVersion = '2.22.0'
}

//////////////////////////////// DO NOT CHANGE THIS FILE //////////////////////////////////
